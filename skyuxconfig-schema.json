{
  "$schema": "http://json-schema.org/schema",
  "title": "JSON schema for SKY UX CLI skyuxconfig.json",
  "definitions": {
    "externalFileCSS": {
      "type": "object",
      "properties": {
        "url": {
          "description": "Fully qualified URL of the file.",
          "type": "string"
        },
        "integrity": {
          "description": "Subresource integrity string to include.",
          "type": "string"
        }
      }
    },
    "externalFileJS": {
      "allOf":[
        {
          "$ref": "#/definitions/externalFileCSS"
        },
        {
          "properties": {
            "head": {
              "description": "Inject in the head versus before the closing body tag.",
              "type": "boolean"
            }
          }
        }
      ]
    }
  },
  "properties": {
    "app": {
      "description": "Specifies configuration options for the local app when running skyux serve",
      "type": "object",
      "properties": {
        "externals": {
          "description": "Dynamically injects CSS and JavaScript files into SKY UX Host. You should have a specific use-case for an externals and they must be white-listed by the SKY UX team.",
          "type": "object",
          "properties": {
            "css": {
              "description": "CSS files to inject",
              "type": "object",
              "properties": {
                "before": {
                  "description": "CSS files to inject before default SKY UX files.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/externalFileCSS"
                  }
                },
                "after": {
                  "description": "CSS files to inject after default SKY UX files.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/externalFileCSS"
                  }
                }
              }
            },
            "js": {
              "description": "JS files to inject",
              "type": "object",
              "properties": {
                "before": {
                  "description": "JS files to inject before default SKY UX files.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/externalFileJS"
                  }
                },
                "after": {
                  "description": "JS files to inject before default SKY UX files.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/externalFileJS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "codeCoverageThreshold": {
      "description": "Specifies the minimum required code coverage threshold.",
      "type": "string",
      "enum": [
        "none",
        "standard",
        "strict"
      ]
    },
    "host": {
      "description": "Blackbaud Only - Specifies configuration options for communication with SKY UX Host.",
      "type": "object",
      "properties": {
        "bbCheckout": {
          "description": "Specifies bbCheckout options for the Host service.",
          "type": "object",
          "properties": {
            "version": {
              "description": "Specifies the whitelisted version of bbCheckout to include.",
              "type": "string",
              "enum": [
                "2"
              ]
            }
          }
        },
        "frameOptions": {
          "description": "Specifies frame options for the Host service.",
          "type": "object",
          "properties": {
            "none": {
              "description": "Sets the frame options to none. Superseds all other `frameOptions` properties.",
              "type": "boolean"
            },
            "self": {
              "description": "Sets the frame options to self.",
              "type": "boolean"
            },
            "blackbaud": {
              "description": "Sets the frame options to common Blackbaud URLs",
              "type": "boolean"
            },
            "urls": {
              "description": "Sets the frame options to this list.  Can be used in conjunction with the `self` and `blackbaud` properties.",
              "type": "array"
            }
          },
          "if": {
            "properties": {
              "none": {
                "const": true
              }
            },
            "required": [
              "none"
            ]
          },
          "then": {
            "not": {
              "anyOf": [
                {
                  "properties": {
                    "blackbaud": {
                      "const": true
                    }
                  },
                  "required": [
                    "blackbaud"
                  ]
                },
                {
                  "properties": {
                    "self": {
                      "const": true
                    }
                  },
                  "required": [
                    "self"
                  ]
                },
                {
                  "properties": {
                    "urls": {
                      "minItems": 1
                    }
                  },
                  "required": [
                    "urls"
                  ]
                }
              ]
            }
          }
        },
        "url": {
          "description": "Specifies a base URL to pass information from skyux serve to the SKY UX Host.",
          "type": "string",
          "default": "https://host.nxt.blackbaud.com"
        }
      }
    },
    "params": {
      "description": "Specifies a list of parameters that are allowed at runtime.",
      "type": [
        "object"
      ],
      "patternProperties": {
        "^.*$": {
          "type": [
            "boolean",
            "object"
          ],
          "properties": {
            "required": {
              "description": "Indicates the parameter must be supplied to the application in order to function.",
              "type": "boolean"
            },
            "value": {
              "description": "The default value of the parameter. This value may be overridden at runtime by the query string or other future sources of parameter values."
            },
            "excludeFromRequests": {
              "description": "Indicates whether the parameter should be excluded from the parameters automatically added to the query string of URLs requested with SkyAuthHttp.",
              "type": "boolean",
              "default": true
            }
          }
        }
      }
    }
  }
}
